name: Deploy to Production

on:
    push:
        branches: [ master ]

jobs:
    deploy:
        runs-on: ubuntu-latest
        
        env:
            APP_ENV: ${{ secrets.APP_ENV }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            REDIS_URL: ${{ secrets.REDIS_URL }}
            SERVER_HOST: ${{ secrets.SERVER_HOST }}
            SERVER_USER: ${{ secrets.SERVER_USER }}
        
        steps:
            - name: Checkout repo
              uses: actions/checkout@v3
            
            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.8.0
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            
            - name: Sync project to server
              run: |
                  rsync -avz --delete \
                    --exclude ".git/" \
                    --exclude ".github/" \
                    -e "ssh -o StrictHostKeyChecking=no" \
                    ./ ${SERVER_USER}@${SERVER_HOST}:/srv/2bstock-app/
            
            - name: Deploy containers
              run: |
                  ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} '
                    cd /srv/2bstock-app &&
                    export APP_ENV=${APP_ENV} &&
                    export POSTGRES_PASSWORD=${POSTGRES_PASSWORD} &&
                    export REDIS_URL=${REDIS_URL} &&
                    docker compose -f docker-compose-production.yml up -d --build
                  '
            
            - name: Wait for containers to be healthy
              run: |
                  ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} '
                    cd /srv/2bstock-app &&
                    echo "Waiting for cli container to be healthy..." &&
                    for i in {1..10}; do
                      docker compose ps -q cli | xargs docker inspect --format="{{.State.Health.Status}}" | grep healthy && break || true
                      echo "Waiting..."; sleep 5
                    done
                  '
            
            - name: Run DB migrations via docker compose exec
              run: |
                  ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} '
                    cd /srv/2bstock-app &&
                    docker compose exec -T cli php bin/console doctrine:migrations:migrate --no-interaction
                  '
            
            - name: ✅ Finished deploy
              run: echo "✅ Deploy completed successfully!"
